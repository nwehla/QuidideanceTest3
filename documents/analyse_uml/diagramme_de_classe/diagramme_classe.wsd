@startuml

class Sondage{
    -titre : String
    -question : String
    -description : Textarea
    -multiple : Bool
    -statut : String
    -messagefermeture : Textarea
    -datecreation : Datetime
    -datemiseajour : Datetime
    -datedefermeture : Datetime

    +getid() : ? int
    +getTitre() : ? string
    +setTitre() : self
    +getQuestion() : ? string
    +setQuestion() : self
    +getDescription() : ? string
    +setDescription() : self
    +getMultiple() : ? bool
    +setMultiple() : self
    +getStatut() : string
    +setStatut() : self
    +getMessagefermeture() : ? datetime
    +setMessagefermeture() : self
    +getDatecreation() : ? datetime
    +setDatecreation() : self
    +getDatedemiseajour() : ? datetime
    +setDatedemiseajour() : self
    +getDatedefermeture() : ? datetime
    +setDatedefermeture() : self

    +ajouterSondage(Sondage) : Void
    +supprimerSondage(Sondage) : Bool
    +modifierSondage(Sondage): Bool
    +ajouterReponse(Reponse) : Void
    +supprimerReponse(Reponse) : Bool
    +modifierReponse(Reponse): Bool
}

class Reponse{
    -repondant : String
    -commentaire : Textarea
    -email : String
    -acceptationpartagedonnee : Bool
    -datecreation : Datetime
    -datemiseajour : Datetime
    -datedefermeture : Datetime    

    +getid() : ? int
    +getRepondant() : ? string
    +setRepondant() : self
    +getCommentaire() : ? string
    +setCommentaire() : self
    +getEmail() : ? string
    +setEmail() : self
    +getAcceptationpartagedonne() : ? bool
    +setAcceptationpartagedonne() : self
    +getDatecreation() : ? datetime
    +setDatecreation() : self
    +getDatedemiseajour() : ? datetime
    +setDatedemiseajour() : self
    +getDatedefermeture() : ? datetime
    +setDatedefermeture() : self

    +ajouterReponse(Reponse) : Void
    +supprimerReponse(Reponse) : Bool
    +modifierReponse(Reponse): Bool    
}

class Interroger{
    -intitule : String

    +getid() : ? int
    +getIntitule() : ? string
    +setIntitule() : self

    +ajouterInterroger(Interroger) : Void
    +supprimerInterroger(Interroger) : Bool
    +modifierInterroger(Interroger): Bool
}

class Url{
    -url : String

    +getid() : ? int
    +getUrl() : ? string
    +setUrl() : self

    +ajouterUrl(Url) : Void
    +supprimerUrl(Url) : Bool
    +modifierUrl(Url): Bool
}

class Utilisateur{
    -prenom : String
    -email : Email
    -password : Password
    -roles : Array
    -slug : String
    -datecreation : Datetime
    -datemiseajour : Datetime

    +getid() : ? int
    +getPrenom() : ? string
    +setPrenom() : self
    +getEmail() : ? string
    +setEmail() : self
    +getPassword() : ? string
    +setPassword() : self
    +getRoles() : ? array
    +setRoles() : self
    +getSlug() : ? string
    +setDateSlug() : self
    +getDatecreation() : ? datetime 
    +setDatecreation() : self
    +getDatemiseajour() : ? datetime
    +setDatemiseajour() : self

    +ajouterUtilisateur(Utilisateur) : Void
    +supprimerUtilisateur(Utilisateur) : Bool
    +modifierUtilisateur(Utilisateur): Bool
}

Sondage  "1..*" o-down-o "1..1"Reponse: [Participer]
Sondage  "1..*" o-down-o "1..1"Interroger: [Presenter]
Reponse  "1..*" o-down-o "1..*"Interroger: [Choisir]
Sondage  "0..1" o-down-o "1..1"Url: [Comporter]

@enduml